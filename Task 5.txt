/**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */
fun main() {    
    println("Hello World")
    // Test functions here
}

data class Driver(
    val name: String,
    val xPos: Double,
    val yPos: Double
)

data class Rider(
    val name: String,
    val rideCount: Int,
    val averageRating: Double,
    val xPos: Double,
    val yPos: Double
)

val rider = Rider(
    "Pam",
    2,
    4.5,
    41.4241265,
    -75.6696665
)

val driverDatabase = listOf(
    Driver("Michael", 41.441692237165604, -75.74063210378645),
    Driver("Kevin", 41.34579708449845, -75.64069789999186),
    Driver("Dwight", 41.4420651, -75.6374736),
    Driver("Creed", 41.406597, -75.6540727),
    Driver("Jim", 41.418185, -75.6257407)
)

fun closestDriver(rider: Rider): Driver {
    var closestDriver = driverDatabase[0]
    var minDistance = Double.MAX_VALUE
    for (driver in driverDatabase) {
        val distance = Math.sqrt(Math.pow(driver.xPos - rider.xPos, 2.0) + Math.pow(driver.yPos - rider.yPos, 2.0))
        if (distance < minDistance) {
            minDistance = distance
            closestDriver = driver
        }
    }
    return closestDriver
}
